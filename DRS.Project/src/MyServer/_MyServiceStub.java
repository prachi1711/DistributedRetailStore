package MyServer;


/**
* MyServer/_MyServiceStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from C:/Users/prachi/workspace/DRS.Project/simple.idl
* Friday, November 30, 2012 5:50:25 PM EST
*/

public class _MyServiceStub extends org.omg.CORBA.portable.ObjectImpl implements MyServer.MyService
{

  public String itemReturned (String customerID, int itemID, int noOfReturnedItem) throws MyServer.MyServicePackage.unknown_customerID
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("itemReturned", true);
                $out.write_string (customerID);
                $out.write_long (itemID);
                $out.write_long (noOfReturnedItem);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/unknown_customerID:1.0"))
                    throw MyServer.MyServicePackage.unknown_customerIDHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return itemReturned (customerID, itemID, noOfReturnedItem        );
            } finally {
                _releaseReply ($in);
            }
  } // itemReturned

  public String buy (String customerID, int itemID, int numberOfItem) throws MyServer.MyServicePackage.unknown_customerID
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("buy", true);
                $out.write_string (customerID);
                $out.write_long (itemID);
                $out.write_long (numberOfItem);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/unknown_customerID:1.0"))
                    throw MyServer.MyServicePackage.unknown_customerIDHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return buy (customerID, itemID, numberOfItem        );
            } finally {
                _releaseReply ($in);
            }
  } // buy

  public String exchange (String customerID, int boughtItemID, int boughtNumber, int desiredItemID, int desiredNumber) throws MyServer.MyServicePackage.unknown_customerID
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("exchange", true);
                $out.write_string (customerID);
                $out.write_long (boughtItemID);
                $out.write_long (boughtNumber);
                $out.write_long (desiredItemID);
                $out.write_long (desiredNumber);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/unknown_customerID:1.0"))
                    throw MyServer.MyServicePackage.unknown_customerIDHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return exchange (customerID, boughtItemID, boughtNumber, desiredItemID, desiredNumber        );
            } finally {
                _releaseReply ($in);
            }
  } // exchange

  public String checkStock (String customerID, int itemID) throws MyServer.MyServicePackage.unknown_customerID
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("checkStock", true);
                $out.write_string (customerID);
                $out.write_long (itemID);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:MyServer/MyService/unknown_customerID:1.0"))
                    throw MyServer.MyServicePackage.unknown_customerIDHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return checkStock (customerID, itemID        );
            } finally {
                _releaseReply ($in);
            }
  } // checkStock

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:MyServer/MyService:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _MyServiceStub
